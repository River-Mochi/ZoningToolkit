<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Library</OutputType>
		<Configurations>Debug;Release</Configurations>

		<!-- Paradox Mods publish config (keep if you use it) -->
		<PublishConfigurationPath>Properties\PublishConfiguration.xml</PublishConfigurationPath>

		<!-- Versioning -->
		<Version>1.0.0</Version>
		<FileVersion>$(Version).0</FileVersion>
		<AssemblyVersion>1.0.0.0</AssemblyVersion>

		<!-- Assembly/product metadata (rename later when we switch to ZoneControl) -->
		<Company>$(Authors)</Company>
		<AssemblyTitle>ZoningToolkit</AssemblyTitle>
		<AssemblyName>ZoningToolkit</AssemblyName>
		<Product>ZoningToolkit</Product>
		<Title>ZoningToolkit</Title>

		<!-- Keep warnings strict (remove if too noisy) -->
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>

		<!-- Only set this if you *must* override the Managed path -->
		<CustomManagedPath></CustomManagedPath>
	</PropertyGroup>

	<!-- Release has short informational version -->
	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<InformationalVersion>$(Version)</InformationalVersion>
		<IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
		<DefineConstants>TRACE</DefineConstants>
	</PropertyGroup>

	<!-- Debug includes +commit in informational version -->
	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<InformationalVersion>$(Version)</InformationalVersion>
		<IncludeSourceRevisionInInformationalVersion>true</IncludeSourceRevisionInInformationalVersion>
		<DefineConstants>TRACE;DEBUG</DefineConstants>
	</PropertyGroup>

	<!-- Let the CS2 toolchain provide TargetFramework and resolve refs -->
	<Import Project="$([System.Environment]::GetEnvironmentVariable('CSII_TOOLPATH', 'EnvironmentVariableTarget.User'))\Mod.props" />
	<Import Project="$([System.Environment]::GetEnvironmentVariable('CSII_TOOLPATH', 'EnvironmentVariableTarget.User'))\Mod.targets" />

	<ItemGroup>
		<!-- Ensure ALL game/Unity/Colossal refs are not copied to output -->
		<Reference Include="Game">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.Core">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.Logging">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.IO.AssetDatabase">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.UI">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.UI.Binding">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.Localization">
			<Private>false</Private>
		</Reference>
		<Reference Include="Colossal.Mathematics">
			<Private>false</Private>
		</Reference>
		<Reference Include="UnityEngine.CoreModule">
			<Private>false</Private>
		</Reference>
		<Reference Include="Unity.Burst">
			<Private>false</Private>
		</Reference>
		<Reference Include="Unity.Collections">
			<Private>false</Private>
		</Reference>
		<Reference Include="Unity.Entities">
			<Private>false</Private>
		</Reference>
		<Reference Include="Unity.Mathematics">
			<Private>false</Private>
		</Reference>
		<Reference Include="Unity.InputSystem">
			<Private>false</Private>
		</Reference>
	</ItemGroup>

	<ItemGroup>
		<Reference Update="System">
			<Private>false</Private>
		</Reference>
		<Reference Update="System.Core">
			<Private>false</Private>
		</Reference>
		<Reference Update="System.Data">
			<Private>false</Private>
		</Reference>
	</ItemGroup>

	<!-- Build your Cohtml/React UI bundle (only if the UI project exists) -->
	<Target Name="BuildUI" AfterTargets="AfterBuild" Condition="Exists('$(ProjectDir)zoning-toolkit-ui\package.json')">
		<Exec Command="npm run build" WorkingDirectory="$(ProjectDir)zoning-toolkit-ui" />
	</Target>

	<!-- Copy the UI bundle into the deploy directory (only if UI output exists) -->
	<Target Name="CopyUIFiles" AfterTargets="DeployWIP" Condition="Exists('bin\UI')">
		<ItemGroup>
			<UIFiles Include="bin\UI\**\*.*" />
		</ItemGroup>
		<Copy SourceFiles="@(UIFiles)" DestinationFiles="@(UIFiles->'$(DeployDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>

	<!-- Optional: prints the active TargetFramework during build; remove anytime -->
	<Target Name="ShowTFM" BeforeTargets="Build">
		<Message Importance="High" Text="TargetFramework=$(TargetFramework)" />
	</Target>

</Project>
